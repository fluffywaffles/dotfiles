#!/bin/zsh

# URL that links to a txt file which serves as a reference ordering over
#   all emoji supported by the Unicode CLDR
target=${1:-https://unicode.org/emoji/charts/emoji-ordering.txt}
fontshare=${HOME}/.local/share/fonts

# set up configuration dump path
mkdir -p ${fontshare}

# pull the emoji ordering reference text from the target, if not exists
if [[ ! -e ${fontshare}/emoji-ordering.txt ]]; then
  curl ${target} > ${fontshare}/emoji-ordering.txt
fi

# process the emoji-ordering.txt file into a list of formatted codepoints
#
# 1. if the line starts with #, it is a comment and we can skip it
# 2. otherwise, the first column of each line is a codepoint
# 3. formatted like U+XXXX, so we replace U+ with 0x for hexadecimal
if [[ ! -e ${fontshare}/emoji-codepoints.txt ]]; then
  grep -v '^#' ${fontshare}/emoji-ordering.txt \
    | cut -d' ' -f1                            \
    | sed -e 's/U+/0x/g'                       \
  > ${fontshare}/emoji-codepoints.txt
fi

codepoints=$(cat ${fontshare}/emoji-codepoints.txt)
format_pattern=$(cat <<EOF
\n  <match target='pattern'>
    <test name='charset' compare='contains'>
      <charset><int>%s</int></charset>
    </test>
    <edit name='family' mode='prepend_first' binding='strong'>
      <string>Noto Color Emoji</string>
    </edit>
  </match>
EOF
)
print -v inner_xml -f "${format_pattern}" ${=codepoints}

# spit out a fontconfig file forcing an emoji font for these codepoints
cat <<EOF
<?xml version='1.0'?>
<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
<!-- THIS FILE WAS AUTOGENERATED BY ${0} -->
<fontconfig>${inner_xml}
</fontconfig>
EOF
