# TRUE COLOR
# https://sunaku.github.io/tmux-23bit-color.html#usage
# This setup obsoletes `set -g default-terminal "screen-256color"`
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"

# Cursor shape forwarding overrides.
# https://github.com/neovim/neovim/wiki/FAQ#how-can-i-change-the-cursor-shape-in-the-terminal
# Tell tmux to forward cursor shape escape sequences. Otherwise, it captures them.
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Use zsh.
set-option -g default-shell /bin/zsh

# Automatically set window title.
# set-option -g automatic-rename on
# set-option -g set-titles on

# Use UTF8.
#setw -g utf8 on
#set-window-option -g utf8 on

# Vi mode, and mouse mode, by default.
set -g status-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -sel clip"
bind-key -T copy-mode-vi 'V' send -X rectangle-toggle
setw -g mouse on

# Notify me what windows currently are doing things.
setw -g monitor-activity on

# Tmux Plugin Manager.
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# Plugin configuration.
# set -g @continuum-restore 'on'

# Initialize TPM. NOTE: keeping this here lets me override plugin keybindings below.
# run '~/.tmux/plugins/tpm/tpm'

## Key bindings (must come after plugin install).
# Make it easy to reload tmux config.
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf!"

# Use C-a not C-b as prefix.
unbind C-b
set -g prefix C-a
# Press C-a again to actually use C-a! Very nice.
bind C-a send-prefix

unbind Left
unbind Down
unbind Up
unbind Right

# Resize panes with capital vim keys.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5 # invert because then it's like you're moving the pane divider DOWN on J
bind -r K resize-pane -U 5 # and then moving it UP on K
bind -r L resize-pane -R 5

bind -n M-- select-layout even-horizontal
bind -n M-= select-layout even-vertical

bind C-s split-window -hc "#{pane_current_path}"
bind C-w split-window -vc "#{pane_current_path}"

bind b set-option status

# Theme (Taken from https://github.com/dkeg/dots/blob/master/tmux.conf).
# Codepoints: · 00b7
setw -g window-status-format "#[bg=colour0]#[fg=colour3] · #[bg=colour0]#[fg=colour8] #W  "
setw -g window-status-current-format "#[bg=colour0]#[fg=colour2] · #[bg=colour0]#[fg=colour7] #W  "
setw -g window-status-current-attr dim
set -g status-bg "#43d08a" # This color comes from vim-two-firewatch.
set -g status-fg default
set -g status-position bottom
set -g status-justify right
set -g status-left ' '
set -g status-right ' '

# Use prefix C-{vim directions}
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R
bind -r C-\ select-pane -l

# Seamless(ish) navigation between bspwm, tmux panes, and vim splits
# NOTE: keybindings in sxhkd and plugins.vim must match keybindings given here.
# NOTE: sxhkd must be configured to forward hotkeys using ~ for tmux to receive these key events.
# NOTE: See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -r C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -r C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -r C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -r C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -r C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# Kill window: kill vim split if in vim, otherwise kill pane
bind -n C-d if-shell "$is_vim" "send-keys C-w q" "send-keys C-d"

# Give me my fucking line clear back. How did it shadow this anyway?!
bind-key -n C-l send-keys 'C-l'

bind M-v neww -n nvimconf "nvim ~/.config/nvim/init.vim"
bind M-t neww -n tmuxconf "nvim ~/.dotfiles/tmux.conf"

# Don't cause wait time when sending keys to other programs!
set -sg escape-time 0
