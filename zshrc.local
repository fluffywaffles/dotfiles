#
# Path!
# Djikstra! ... would be confused to know he is referenced here.
#

# Ruby
export GEM_HOME="$HOME/.gem"
export PATH="$PATH:$HOME/.gem/ruby/2.4.0/bin"

# Cargo (Rust)
export PATH="$PATH:$HOME/.cargo/bin"

# Perl --- because pod2man is often required in builds from AUR
source /etc/profile.d/perlbin.sh # fkn perl

# Local bins
export PATH="$PATH:$HOME/.local/bin"

#
# Keyboard
# QWERT
#

# Go it, fastly!
export KEYTIMEOUT=1

# Vi keybindings
bindkey -v

# Keybindings that should be preserved even after entering and exiting vi normal mode.
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word

# ibus
export GTK_IM_MODULE=ibus  # youbus
export XMODIFIERS=@im=ibus # webus
export QT_IM_MODULE=ibus   # bus is life

#
# Aliases, functions, source-able software (plugins), ...?
#

# nvim pls
export EDITOR="nvim"

# Aliaseses
source ~/.aliases

# Better FZF (using ag for filtering)
export FZF_DEFAULT_COMMAND='ag -g ""'

# Add z
source $HOME/software/z/src/z-1.9/z.sh

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /home/fluffywaffles/.local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /home/fluffywaffles/.local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /home/fluffywaffles/.local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /home/fluffywaffles/.local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

#
# Battery functions (used below)
#

gte () {
  [ $1 -gt $2 ] || [ $1 -eq $2 ]
}

function battery-% {
  acpi | cut -d, -f2 | tr -d ' %' | head -n1
}

function battery-state {
  acpi | cut -d, -f1 | cut -d: -f2 | tr -d ' ' | tr A-Z a-z | head -n1
}

function visual-battery {
  battery_ct=$(battery-%)
  battery_st=$(battery-state)
  if gte $battery_ct 85; then
    battery_color="%{$FG[118]%}" # green
  elif gte $battery_ct 70; then
    battery_color="%{$FG[154]%}" # yellow-green
  elif gte $battery_ct 50; then
    battery_color="%{$FG[011]%}" # yellow
  elif gte $battery_ct 30; then
    battery_color="%{$FG[202]%}" # orange
  elif gte $battery_ct 10; then
    battery_color="%{$FG[009]%}" # pale red
  elif gte $battery_ct 0; then
    battery_color="%{$FG[196]%}" # really red
  fi
  echo "$battery_color$battery_ct%% ($battery_st)%{$reset_color%}"
}

#
# Da PrompT
# λ λ λ
#

# Only do all this if we're running X...
if [[ $DISPLAY ]]; then
  # Shorten the prompt
  # Stolen (!) from the "norm" zsh theme in OMZ
  PROMPT='%{$fg[yellow]%}λ %{$fg[green]%}%c %{$fg[yellow]%}→ $(git_prompt_info)%{$reset_color%}'
else
  PROMPT='%{$fg[yellow]%}. %{$fg[green]%}%c %{$fg[yellow]%}→ $(git_prompt_info)%{$reset_color%}'
fi

#
# RPrompT (the one on the right!)
# Print battery visual indicator and vim-mode on right-hand side of prompt
#

VIM_NORMAL_MODE="%{$fg_bold[blue]%} [%  nrm ]% %{$reset_color%}"
VIM_INSERT_MODE="%{$fg_bold[green]%} [%  ins ]% %{$reset_color%}"

# Draw at start of each line print, and when keymap changes
function update-rprompt {
  # battery=$(visual-battery)
  RPROMPT="${${KEYMAP/vicmd/$VIM_NORMAL_MODE}/(main|viins)/$VIM_INSERT_MODE} $EPS1"
}

# Widget functions (for when zsh redraws the prompt)
function zle-line-init zle-keymap-select {
update-rprompt
zle reset-prompt
}

# Register the widget functions
zle -N zle-line-init
zle -N zle-keymap-select

# Do it at source-time too!
update-rprompt

#
# Misc
# Weird config stuff that maybe I shouldn't have
#

# If st, run tmux.
if [[ "$TERM" = "st-256color" ]]; then
  if [[ -z "$TMUX" ]]; then
    tmux at || tmux new
  fi
fi
